{"version":3,"sources":["./src/ui/input-mask/input-mask.component.ts","./src/ui/color-picker/formly-field-color-picker.component.ts","./src/app/services/users.service.ts","./src/ui/checkbox/formly-field-checkbox.component.ts","./src/environments/environment.ts","./src/ui/steps/formly-field-steps.component.ts","./src/app/components/list/list.component.ts","./src/app/components/list/list.component.html","./src/app/components/edit/edit.component.ts","./src/app/components/edit/edit.component.html","./src/ui/snello.component.module.ts","./src/app/commons/outlet.component.ts","./src/app/commons/outlet.component.html","./src/ui/multi-select/multi-select.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/ui/auto.complete/formly-field-auto-complete.component.ts","./src/ui/chips/formly-field-chips.component.ts","./src/ui/dropdown/dropdown.component.ts","./src/ui/input-switch/input-switch.component.ts","./src/app/app.module.ts","./src/app/components/home-page/home-page.component.ts","./src/app/components/home-page/home-page.component.html","./src/app/services/update.service.ts","./src/app/constants/constants.ts","./src/ui/editor/formly-field-editor.component.ts","./src/ui/cascade-select/cascade-select.component.ts","./src/ui/text-area/text-area.component.ts","./src/ui/formly-field-list/formly-field-list.component.ts","./src/ui/calendar/formly-field-calendar.component.ts","./src/app/components/view/view.component.ts","./src/app/components/view/view.component.html","./src/ui/tabs/formly-field-tabs.component.ts","./src/app/app-routing.module.ts","./src/main.ts","./src/ui/list-box/list-box.component.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'app-input-mask',\n  template: `\n    <div class=\"p-fluid\">\n    <div class=\"p-field\">\n      <label>{{to.label}}</label>\n      <p-inputMask\n       [mask]=\"!!to.mask ? to.mask : ''\"\n       [placeholder]=\"to.placeholder\"\n       [slotChar]=\"!!to.slotChar ? to.slotChar : ''\"\n       [characterPattern]=\"!!to.characterPattern ? to.characterPattern : ''\"\n       [formControl]=\"formControl\" [formlyAttributes]=\"field\"></p-inputMask>\n      </div>\n  </div>\n  `,\n  encapsulation: ViewEncapsulation.None\n})\nexport class InputMaskComponent extends FieldType implements OnInit {\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'colorpicker-type',\n  template: `\n  <div class=\"p-fluid\">\n    <div class=\"p-field-checkbox\">\n        <p-colorPicker [formControl]=\"formControl\" [formlyAttributes]=\"field\"></p-colorPicker>\n        <label >{{to.label}}</label>\n    </div>\n  </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class FormlyFieldColorPickerComponent extends FieldType {\n}\n\n","import {Injectable} from '@angular/core';\nimport {forkJoin, Observable} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {FormlyFieldConfig} from '@ngx-formly/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  get(model: string): any {\n    return this.http.get<{ firstName: string, lastName: string }>('assets/json-powered/' + model);\n  }\n\n  getUserData(): Observable<any> {\n    return forkJoin([this.getUser(), this.getFields()]);\n  }\n\n  getUser(): any {\n    return this.http.get<{ firstName: string, lastName: string }>('assets/json-powered/user.json');\n  }\n\n  getFields(): any {\n    return this.http.get<FormlyFieldConfig[]>('assets/json-powered/user-form.json');\n  }\n\n  getColors(): any {\n    return this.http.get<{ label: string; value: string }[]>('assets/json-powered/colors.json');\n  }\n}\n","/* tslint:disable:component-class-suffix component-selector */\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'checkbox-type',\n  template: `\n    <div class=\"p-field-checkbox\">\n      <p-checkbox [(ngModel)]=\"checked\" binary=\"true\" (ngModelChange)=\"onModelChange()\"></p-checkbox>\n    </div>\n  `,\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class FormlyFieldCheckboxComponent extends FieldType implements OnInit {\n  checked: boolean;\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit(): void {\n  }\n\n  onModelChange(): void {\n    this.field.formControl.setValue(this.checked);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","/* tslint:disable:component-selector component-class-suffix */\nimport { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FieldType, FormlyFieldConfig } from '@ngx-formly/core';\nimport { MenuItem } from 'primeng/api';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'formly-field-steps',\n  template: `\n    <p-steps [model]=\"items\" [(activeIndex)]=\"index\" [readonly]=\"true\"></p-steps>\n\n    <p-card styleClass=\"p-card-shadow\">\n      <ng-template pTemplate=\"title\">\n        {{items[index].label}}\n      </ng-template>\n\n      <ng-template pTemplate=\"content\">\n        <div class=\"form-container\">\n          <form>\n            <formly-form [model]=\"model\" [fields]=\"fields\" [form]=\"form\"></formly-form>\n          </form>\n        </div>\n      </ng-template>\n\n      <ng-template pTemplate=\"footer\">\n        <div class=\"p-grid p-nogutter\" [class.p-justify-between]=\"index>0\" [class.p-justify-end]=\"index===0\">\n          <p-button *ngIf=\"index > 0\" label=\"Back\" icon=\"pi pi-angle-left\" (click)=\"prevPage()\"></p-button>\n          <p-button *ngIf=\"index < tabs.length-1\" label=\"Next\" icon=\"pi pi-angle-right\" iconPos=\"right\"\n                    (click)=\"nextPage()\"></p-button>\n          <p-button *ngIf=\"index === tabs.length-1\" label=\"Complete\" (onClick)=\"complete()\"\n                    icon=\"pi pi-angle-right\" iconPos=\"right\" styleClass=\"p-button-success\"></p-button>\n        </div>\n      </ng-template>\n    </p-card>\n  `,\n  encapsulation: ViewEncapsulation.None\n})\nexport class FormlyFieldSteps extends FieldType implements OnInit, OnDestroy {\n  subscription: Subscription;\n\n  fields: FormlyFieldConfig[];\n  items: MenuItem[] = [];\n  tabs: any[] = [];\n  index = 0;\n\n  ngOnInit(): void {\n    this.subscription = new Subscription();\n\n    if (this.field && this.field.fieldGroup) {\n      this.field.fieldGroup.forEach((fg, index) => {\n        this.tabs[index] = fg.fieldGroup;\n        this.items.push(\n          {\n            label: fg.templateOptions.label,\n            command: (event: any) => {\n              this.index = index;\n              this.fields = this.tabs[index];\n            }\n          }\n        );\n      });\n    }\n\n    this.fields = this.tabs[0];\n  }\n\n  isValid(field: FormlyFieldConfig): boolean {\n    if (field.key) {\n      return field.formControl.valid;\n    }\n\n    return field.fieldGroup.every(f => this.isValid(f));\n  }\n\n  nextPage(): void {\n    if (this.form.valid) {\n      this.index = this.index + 1;\n      this.fields = this.tabs[this.index];\n    }\n  }\n\n  prevPage(): void {\n    if (this.index > 0) {\n      this.index = this.index - 1;\n      this.fields = this.tabs[this.index];\n    }\n  }\n\n  complete(): void {\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styles: [\n  ]\n})\nexport class ListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>list works!</p>\n\n<a [routerLink]=\"'/edit'\">edit</a><br />\n<a [routerLink]=\"['/edit', 'bootstrap']\">bootstrap</a><br />\n<a [routerLink]=\"['/edit', 'complex']\">complex</a><br />\n<a [routerLink]=\"['/edit', 'tabs']\">tabs</a><br />\n<a [routerLink]=\"['/edit', 'steps']\">steps</a><br />\n<a [routerLink]=\"['/edit', 'prime']\">prime</a><br />\n<a [routerLink]=\"['/edit', 'list']\">list</a><br />\n<a [routerLink]=\"['/edit', 'multi-select']\">multi select list</a><br />\n<a [routerLink]=\"['/edit', 'checkbox']\">checkbox</a><br />\n<a [routerLink]=\"['/edit', 'chips']\">chips</a><br />\n<a [routerLink]=\"['/edit', 'prime-modules']\">prime modules</a><br />\n<a [routerLink]=\"['/edit', 'editor']\">editor</a><br/>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nimport { FormlyFieldConfig, FormlyFormOptions } from '@ngx-formly/core';\nimport { UsersService } from '../../services/users.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styles: []\n})\nexport class EditComponent implements OnInit {\n\n  form: FormGroup;\n  options: FormlyFormOptions;\n  model: any = {};\n  fields: FormlyFieldConfig[];\n\n  constructor(\n    protected route: ActivatedRoute,\n    private userService: UsersService\n  ) {\n    this.form = new FormGroup({}, Validators.requiredTrue);\n    const id: string = this.route.snapshot.params.id;\n\n    if (id) {\n      this.userService.get(id + '.json').subscribe(fields => {\n        this.fields = fields;\n\n        console.log('formly fields: ', this.fields);\n      });\n      this.model = {};\n    } else {\n      this.userService.getUserData().subscribe(([model, fields]) => {\n        this.model = model;\n        this.fields = this.mapFields(fields);\n\n        console.log('formly fields: ', this.fields);\n      });\n    }\n  }\n\n  submit(): void {\n    if (this.form.valid) {\n      alert(JSON.stringify(this.model));\n    }\n  }\n\n  /**\n   * Adjust the JSON fields loaded from the server.\n   */\n  mapFields(fields: FormlyFieldConfig[]): any {\n    return fields.map(f => {\n      // Bind an observable to `color` field.\n      if (f.key === 'color') {\n        f.type = 'radio';\n        f.templateOptions.options = this.userService.getColors();\n      }\n\n      return f;\n    });\n  }\n\n  ngOnInit(): void {\n  }\n}\n","<p-card>\n  <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n    <formly-form\n      [model]=\"model\"\n      [fields]=\"fields\"\n      [options]=\"options\"\n      [form]=\"form\"\n    ></formly-form>\n    <button type=\"submit\" class=\"btn btn-primary submit-button\" [disabled]=\"!form.valid\">Submit</button>\n  </form>\n</p-card>\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\n// primeng modules\nimport { TabViewModule } from 'primeng/tabview';\nimport { StepsModule } from 'primeng/steps';\nimport { CalendarModule } from 'primeng/calendar';\nimport { AutoCompleteModule } from 'primeng/autocomplete';\nimport { ColorPickerModule } from 'primeng/colorpicker';\nimport { CardModule } from 'primeng/card';\nimport { MultiSelectModule } from 'primeng/multiselect';\nimport { CheckboxModule } from 'primeng/checkbox';\nimport { ChipsModule } from 'primeng/chips';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { CascadeSelectModule } from 'primeng/cascadeselect';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nimport { ListboxModule } from 'primeng/listbox';\nimport { EditorModule } from 'primeng/editor';\nimport { KnobModule } from 'primeng/knob';\n\n// custom components\nimport { FormlyFieldSteps } from './steps/formly-field-steps.component';\nimport { FormlyFieldCalendarComponent } from './calendar/formly-field-calendar.component';\nimport { FormlyFieldAutoCompleteComponent } from './auto.complete/formly-field-auto-complete.component';\nimport { FormlyFieldColorPickerComponent } from './color-picker/formly-field-color-picker.component';\nimport { FormlyFieldListComponent } from './formly-field-list/formly-field-list.component';\nimport { MultiSelectComponent } from './multi-select/multi-select.component';\nimport { FormlyFieldCheckboxComponent } from './checkbox/formly-field-checkbox.component';\nimport { FormlyFieldTabs } from './tabs/formly-field-tabs.component';\nimport { FormlyFieldChipsComponent } from './chips/formly-field-chips.component';\nimport { CascadeSelectComponent } from './cascade-select/cascade-select.component';\nimport { DropdownComponent } from './dropdown/dropdown.component';\nimport { InputMaskComponent } from './input-mask/input-mask.component';\nimport { InputSwitchComponent } from './input-switch/input-switch.component';\nimport { TextAreaComponent } from './text-area/text-area.component';\nimport { ListBoxComponent } from './list-box/list-box.component';\nimport { FormlyFieldEditorComponent } from './editor/formly-field-editor.component';\n\n@NgModule({\n  declarations: [\n    FormlyFieldAutoCompleteComponent,\n    FormlyFieldTabs,\n    FormlyFieldSteps,\n    FormlyFieldCalendarComponent,\n    FormlyFieldColorPickerComponent,\n    FormlyFieldListComponent,\n    MultiSelectComponent,\n    FormlyFieldCheckboxComponent,\n    FormlyFieldChipsComponent,\n    CascadeSelectComponent,\n    DropdownComponent,\n    InputMaskComponent,\n    InputSwitchComponent,\n    TextAreaComponent,\n    ListBoxComponent,\n    FormlyFieldEditorComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    FormlyModule,\n    TabViewModule,\n    StepsModule,\n    CalendarModule,\n    ReactiveFormsModule,\n    AutoCompleteModule,\n    ColorPickerModule,\n    CardModule,\n    MultiSelectModule,\n    CheckboxModule,\n    ChipsModule,\n    CascadeSelectModule,\n    DropdownModule,\n    InputMaskModule,\n    InputSwitchModule,\n    InputTextareaModule,\n    ListboxModule,\n    EditorModule,\n    KnobModule\n  ],\n  exports: [\n    FormlyFieldAutoCompleteComponent,\n    FormlyFieldTabs,\n    FormlyFieldSteps,\n    FormlyFieldCalendarComponent,\n    FormlyFieldColorPickerComponent,\n    FormlyFieldListComponent,\n    MultiSelectComponent,\n    FormlyFieldCheckboxComponent,\n    FormlyFieldChipsComponent,\n    CascadeSelectComponent,\n    DropdownComponent,\n    InputMaskComponent,\n    InputSwitchComponent,\n    TextAreaComponent,\n    ListBoxComponent,\n    FormlyFieldEditorComponent\n  ]\n})\nexport class SnelloComponentModule {\n}\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  templateUrl: './outlet.component.html'\n})\nexport class OutletComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","/* tslint:disable:component-class-suffix component-selector */\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'multiselect-type',\n  template: `\n    <p-multiSelect\n      [options]=\"selectOptions\"\n      [(ngModel)]=\"selectedOptions\" (ngModelChange)=\"onModelChange()\"\n      optionLabel=\"label\"\n      optionValue=\"value\"></p-multiSelect>\n  `,\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class MultiSelectComponent extends FieldType implements OnInit {\n\n  selectedOptions: [];\n  selectOptions: any[] = [];\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.getOptions();\n  }\n\n  getOptions(): void {\n    this.field.fieldGroup.forEach(element => {\n      element.templateOptions.options.forEach(item => {\n        this.selectOptions.push(item);\n      });\n    });\n  }\n\n  onModelChange(): void {\n    this.field.formControl.setValue({movies: this.selectedOptions});\n  }\n}\n","import {Component} from '@angular/core';\nimport {CountryService} from './services/country.service';\nimport {PAGES} from './constants/constants';\nimport {UpdateService} from './services/update.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  text: string;\n  results: string[];\n  utente: any;\n  pages = PAGES;\n  updateVisible: boolean;\n\n\n  constructor(\n    public updateService: UpdateService) {\n  }\n\n  search(event): void {\n  }\n\n  logout(): void {\n  }\n\n  public update(): void {\n    this.updateService.resetUpdateEvent();\n    this.updateVisible = false;\n    window.location.reload();\n  }\n}\n","<p-sidebar [(visible)]=\"updateVisible\" [dismissible]=\"false\" [modal]=\"false\" [showCloseIcon]=\"false\" position=\"middle\"\n           styleClass=\"update-bar\">\n  È disponibile una nuova versione!\n  <button (click)=\"update()\" class=\"ui-button-secondary pull-right\" label=\"AGGIORNA\" pButton type=\"button\"></button>\n</p-sidebar>\n<div class=\"sidebar open\" id=\"mySidebar\">\n  <ul>\n    <li *ngFor=\"let page of pages\">\n      <a *ngIf=\"page.routerLink\" [routerLink]=\"page.routerLink\" routerLinkActive=\"active\">\n        <i [ngClass]=\"page.icon\" aria-hidden=\"true\"></i>\n        <span>{{ page.label }}</span></a>\n      <a *ngIf=\"page.url\" href=\"{{ page.url }}\"><i [ngClass]=\"page.icon\" aria-hidden=\"true\"></i>\n        <span>{{ page.label }}</span></a>\n    </li>\n  </ul>\n</div>\n\n<div class=\"navbar-top\">\n  <div class=\"openbtn\" onclick=\"toggleNav()\">\n    <i aria-hidden=\"true\" class=\"fa fa-bars\"></i>\n  </div>\n  <div class=\"logo-wrapper\">\n    <a routerLink=\"/\"> <img src=\"assets/images/logo.svg\"/></a>\n  </div>\n\n\n  <ul class=\"user-menu\">\n    <li>Benvenuto</li>\n    <li>\n      <a>\n        <span class=\"profile-name\">{{ utente?.nome }} {{ utente?.cognome }}</span>\n        <i class=\"material-icons ui-icon-keyboard-arrow-down\"></i>\n      </a>\n    </li>\n\n\n    <li (click)=\"logout()\">\n      Logout\n    </li>\n\n  </ul>\n</div>\n\n<div class=\"closed\" id=\"main\"><div class=\"wrapper\">\n\n  <router-outlet></router-outlet>\n</div>\n</div>","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'autocomplete-type',\n  template: `\n  <div class=\"p-fluid\">\n    <div class=\"p-field\">\n      <label>{{to.label}}</label>\n        <p-autoComplete \n        [formControl]=\"formControl\"\n        [formlyAttributes]=\"field\"\n        [field]=\"!!to.field ? to.field : ''\"\n        [minLength]=\"!!to.minLength ? to.minLength :1\"\n        [suggestions]=\"results\"\n        [dropdown]=\"!!to.dropdown === true\"\n        [multiple]=\"!!to.multiple === true\"\n        (completeMethod)=\"search($event)\">\n      </p-autoComplete>\n      </div>\n  </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class FormlyFieldAutoCompleteComponent extends FieldType {\n\n  results: string[];\n\n  constructor(private httpClient: HttpClient) {\n    super();\n  }\n\n  search(event): void {\n    if (this.to.remoteurl) {\n      this.httpClient.get<string[]>(this.to.remoteurl + event.query).subscribe(data => {\n        this.results = data;\n      });\n    } else {\n      this.results = [];\n    }\n  }\n}\n\n","/* tslint:disable:component-class-suffix component-selector */\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'chips-type',\n  template: `\n    <p-chips [(ngModel)]=\"chipsList\" separator=\",\" (ngModelChange)=\"onModelChange()\"></p-chips>\n  `,\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class FormlyFieldChipsComponent extends FieldType implements OnInit {\n  chipsList: string[];\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit(): void {\n  }\n\n  onModelChange(): void {\n    this.field.formControl.setValue(this.chipsList);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'app-dropdown',\n  template: `\n    <div class=\"p-fluid\">\n      <div class=\"p-field\">\n        <label>{{to.label}}</label>\n        <p-dropdown \n        [options]=\"dropdownOptions\" \n        [optionLabel]=\"!!to.optionLabel ? to.optionLabel : ''\"\n        [placeholder]=\"to.placeholder\"\n        [showClear]=\"to.showClear === true\"\n        [editable]=\"to.editable === true\"\n        [filterBy]=\"!!to.filterBy ? to.filterBy : ''\"\n        [filter]=\"to.filter === true\"\n        [group]=\"to.group === true\"\n        [formControl]=\"formControl\" [formlyAttributes]=\"field\" >\n      </p-dropdown>\n        </div>\n    </div>\n  `,\n  encapsulation: ViewEncapsulation.None\n})\nexport class DropdownComponent extends FieldType implements OnInit {\n\n  dropdownOptions = [];\n\n  constructor(private httpClient: HttpClient) {\n    super();\n  }\n\n  ngOnInit(): void {\n    if (this.to.remoteurl) {\n      this.httpClient.get<any[]>(this.to.remoteurl).subscribe(data => {\n        this.dropdownOptions = data;\n      });\n    } else if (this.to.options) {\n      this.dropdownOptions = this.to.options as any[];\n    } else {\n      this.dropdownOptions = [];\n    }\n  }\n\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'app-input-switch',\n  template: `\n    <div class=\"p-fluid \">\n      <div class=\"p-field-checkbox\">\n        <p-inputSwitch [formControl]=\"formControl\" [formlyAttributes]=\"field\"></p-inputSwitch>\n        <label>{{to.label}}</label>\n      </div>\n  </div>\n  `,\n  encapsulation: ViewEncapsulation.None\n})\nexport class InputSwitchComponent extends FieldType implements OnInit {\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n// modules\nimport { AutoCompleteModule } from 'primeng/autocomplete';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SidebarModule } from 'primeng/sidebar';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { MessageModule } from 'primeng/message';\nimport { MessagesModule } from 'primeng/messages';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { FormlyBootstrapModule } from '@ngx-formly/bootstrap';\nimport { SnelloComponentModule } from '../ui/snello.component.module';\nimport { CardModule } from 'primeng/card';\n\n// components\nimport { ViewComponent } from './components/view/view.component';\nimport { EditComponent } from './components/edit/edit.component';\nimport { ListComponent } from './components/list/list.component';\nimport { HomePageComponent } from './components/home-page/home-page.component';\nimport { OutletComponent } from './commons/outlet.component';\n\n// custom field types\nimport { FormlyFieldTabs } from '../ui/tabs/formly-field-tabs.component';\nimport { FormlyFieldSteps } from '../ui/steps/formly-field-steps.component';\nimport { FormlyFieldCalendarComponent } from '../ui/calendar/formly-field-calendar.component';\nimport { FormlyFieldAutoCompleteComponent } from '../ui/auto.complete/formly-field-auto-complete.component';\nimport { FormlyFieldColorPickerComponent } from '../ui/color-picker/formly-field-color-picker.component';\nimport { FormlyFieldListComponent } from '../ui/formly-field-list/formly-field-list.component';\nimport { MultiSelectComponent } from '../ui/multi-select/multi-select.component';\nimport { FormlyFieldCheckboxComponent } from '../ui/checkbox/formly-field-checkbox.component';\nimport { FormlyFieldChipsComponent } from '../ui/chips/formly-field-chips.component';\nimport { CascadeSelectComponent } from 'src/ui/cascade-select/cascade-select.component';\nimport { DropdownComponent } from 'src/ui/dropdown/dropdown.component';\nimport { InputMaskComponent } from 'src/ui/input-mask/input-mask.component';\nimport { InputSwitchComponent } from 'src/ui/input-switch/input-switch.component';\nimport { TextAreaComponent } from 'src/ui/text-area/text-area.component';\nimport { ListBoxComponent } from 'src/ui/list-box/list-box.component';\nimport { FormlyFieldEditorComponent } from '../ui/editor/formly-field-editor.component';\n\n// environment\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ViewComponent,\n    EditComponent,\n    HomePageComponent,\n    ListComponent,\n    OutletComponent\n  ],\n  bootstrap: [AppComponent],\n  imports: [\n    AppRoutingModule,\n    AutoCompleteModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    FormlyBootstrapModule,\n    FormlyModule.forRoot({\n      types: [\n        { name: 'tabs', component: FormlyFieldTabs },\n        { name: 'steps', component: FormlyFieldSteps },\n        { name: 'list', component: FormlyFieldListComponent },\n        { name: 'calendar', component: FormlyFieldCalendarComponent },\n        { name: 'autocomplete', component: FormlyFieldAutoCompleteComponent },\n        { name: 'colopicker', component: FormlyFieldColorPickerComponent },\n        { name: 'multi-select', component: MultiSelectComponent },\n        { name: 'cascadeselect', component: CascadeSelectComponent },\n        { name: 'dropdown', component: DropdownComponent },\n        { name: 'checkbox', component: FormlyFieldCheckboxComponent },\n        { name: 'chips', component: FormlyFieldChipsComponent },\n        { name: 'inputmask', component: InputMaskComponent },\n        { name: 'inputswitch', component: InputSwitchComponent },\n        { name: 'textarea', component: TextAreaComponent },\n        { name: 'listbox', component: ListBoxComponent },\n        {name: 'editor', component: FormlyFieldEditorComponent}\n      ]\n    }),\n    FormsModule,\n    HttpClientModule,\n    MessageModule,\n    MessagesModule,\n    OverlayModule,\n    CardModule,\n    ReactiveFormsModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n    SidebarModule,\n    SnelloComponentModule\n  ]\n})\nexport class AppModule {\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styles: [\n  ]\n})\nexport class HomePageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home-page works!</p>\n\n\n","import {Injectable} from '@angular/core';\nimport {SwUpdate} from '@angular/service-worker';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {filter} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateService {\n\n  private updateEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  constructor(private swUpdate: SwUpdate) {\n    this.swUpdate.available.subscribe(evt => {\n      this.updateEvent.next(true);\n    });\n  }\n\n  public get updateEvent$(): Observable<boolean> {\n    return this.updateEvent.asObservable().pipe(\n      filter(ev => ev === true)\n    );\n  }\n\n  public resetUpdateEvent(): void {\n    this.updateEvent.next(false);\n  }\n}\n","import {MenuItem} from 'primeng/api';\nimport {environment} from '../../environments/environment';\n\nexport const APP_PROTOCOL = window.location.protocol + '//';\nexport const APP_HOST = window.location.hostname + ':';\nexport const APP_PORT = window.location.port;\nexport const APP_CONTEXT = '/snello';\nexport const APP_API = 'api/v2/';\nexport const APP_NAME = APP_PROTOCOL + APP_HOST + APP_PORT + APP_CONTEXT + APP_API;\n\n\nexport const API_DATE_FORMAT = 'yyyy-MM-DD[T]HH:mm:ss';\nexport const CHIPS_DATE_FORMAT = 'DD/MM/yyyy HH:mm';\n\nexport const APP_VERSION = '1.0.1';\nexport const APP_API_ONLY = 'api/';\n\nexport const PAGES: MenuItem[] = [\n  {label: 'List', routerLink: '/list', icon: 'fa fa-clipboard'},\n];\n\nexport const ERROR_MSG = {\n  200: 'code already exists.',\n};\n","/* tslint:disable:component-class-suffix component-selector */\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'editor-type',\n  template: `\n    <p-editor [(ngModel)]=\"editorText\" (ngModelChange)=\"onModelChange()\"\n              [style]=\"{'height':'320px'}\"></p-editor>\n  `,\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class FormlyFieldEditorComponent extends FieldType implements OnInit {\n  editorText = '';\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit(): void {\n  }\n\n  onModelChange(): void {\n    this.field.formControl.setValue(this.editorText);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'app-cascade-select',\n  template: `\n    <div class=\"p-fluid p-grid\" style=\"margin-left:2px\">\n      <div class=\"p-field\">\n        <label>{{to.label}}</label>\n        <p-cascadeSelect \n        [options]=\"selectOptions\" \n        [optionLabel]=\"!!to.optionLabel ? to.optionLabel : ''\" \n        [optionGroupLabel]=\"!!to.optionGroupLabel ? to.optionGroupLabel : ''\" \n        [optionGroupChildren]=\"!!to.optionGroupChildren ? to.optionGroupChildren : []\" \n        [placeholder]=\"to.placeholder\"\n        [formControl]=\"formControl\" [formlyAttributes]=\"field\">\n      </p-cascadeSelect>\n      </div>\n  </div>\n  `,\n  encapsulation: ViewEncapsulation.None\n})\nexport class CascadeSelectComponent extends FieldType implements OnInit {\n\n  selectOptions = [];\n\n  constructor(private httpClient: HttpClient) {\n    super();\n  }\n\n  ngOnInit(): void {\n    if (this.to.remoteurl) {\n      this.httpClient.get<string[]>(this.to.remoteurl).subscribe(data => {\n        this.selectOptions = data;\n      });\n    } else if (this.to.options) {\n      this.selectOptions = this.to.options as string[];\n    } else {\n      this.selectOptions = [];\n    }\n  }\n\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'app-text-area',\n  template: `\n    <div class=\"p-fluid\">\n      <div class=\"p-field\">\n        <textarea\n         [rows]=\"to.rows\"\n         [cols]=\"to.cols\" \n         [placeholder]=\"to.placeholder\" \n         pInputTextarea \n         [autoResize]=\"!!to.autoResize\"\n         [formControl]=\"formControl\" [formlyAttributes]=\"field\"></textarea>\n        </div>\n    </div>\n  `,\n  encapsulation: ViewEncapsulation.None\n})\nexport class TextAreaComponent extends FieldType implements OnInit {\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-formly-field-list',\n  template: '',\n  encapsulation: ViewEncapsulation.None\n})\nexport class FormlyFieldListComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'calendar-type',\n  template: `\n    <div class=\"p-fluid\">\n      <div class=\"p-field\">\n        <label >{{to.label}}</label>\n          <p-calendar\n          [defaultDate]=\"!!to.defaultDate ? to.defaultDate : null\"\n          [dateFormat]=\"!!to.dateFormat ? to.dateFormat: 'mm/dd/yy'\"\n          [hourFormat]=\"!!to.hourFormat ? to.hourFormat : '24'\"\n          [showTime]=\"!!to.showTime ? to.hourFormat : false\"\n          [showIcon]=\"!!to.showIcon ? to.showIcon : false\"\n          [showButtonBar]=\"!!to.showButtonBar ? to.showButtonBar : false\"\n          [showOtherMonths]=\"!!to.showOtherMonths ? to.showOtherMonths : false\"\n          [selectOtherMonths]=\"!!to.selectOtherMonths ? to.selectOtherMonths : false\"\n          [selectionMode]=\"!!to.selectionMode ? to.selectionMode : 'single'\"\n          [numberOfMonths]=\"!!to.numberOfMonths ? to.numberOfMonths : '1'\"\n          [formControl]=\"formControl\" [formlyAttributes]=\"field\">\n        </p-calendar>\n        </div>\n    </div>\n    \n  `,\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class FormlyFieldCalendarComponent extends FieldType {\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-view',\n  templateUrl: './view.component.html',\n  styles: [\n  ]\n})\nexport class ViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>view works!</p>\n","import {Component} from '@angular/core';\nimport {FieldType, FormlyFieldConfig} from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-field-tabs',\n  template: `\n    <p-tabView>\n      <p-tabPanel [header]=\"tab.templateOptions.label\" *ngFor=\"let tab of field.fieldGroup; let i = index\" [selected]=\"i == 0\">\n        <formly-field [field]=\"tab\"></formly-field>\n        <button *ngIf=\"i == field.fieldGroup.length\" class=\"btn btn-primary\" [disabled]=\"!form.valid\" type=\"submit\">\n          Submit\n        </button>\n      </p-tabPanel>\n    </p-tabView>\n  `,\n})\n// tslint:disable-next-line:component-class-suffix\nexport class FormlyFieldTabs extends FieldType {\n  constructor() {\n    super();\n    console.log(this.field);\n  }\n\n  isValid(field: FormlyFieldConfig): boolean {\n    if (field.key) {\n      return field.formControl.valid;\n    }\n\n    return field.fieldGroup.every(f => this.isValid(f));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {OutletComponent} from './commons/outlet.component';\nimport {HomePageComponent} from './components/home-page/home-page.component';\nimport {ListComponent} from './components/list/list.component';\nimport {ViewComponent} from './components/view/view.component';\nimport {EditComponent} from './components/edit/edit.component';\n\nconst routes: Routes = [\n  {path: '', component: HomePageComponent},\n  {\n    path: '',\n    component: OutletComponent,\n    children: [\n      {path: 'list', component: ListComponent },\n      {path: 'view/:id', component: ViewComponent },\n      {path: 'edit/:id', component: EditComponent },\n      {path: 'edit', component: EditComponent },\n      {path: 'new', component: EditComponent },\n    ]\n  },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'app-list-box',\n  template: `\n   <div class=\"p-fluid p-grid\">\n      <div class=\"p-field\">\n        <label>{{to.label}}</label>\n        <p-listbox \n        [options]=\"listBoxOptions\" \n        [optionLabel]=\"!!to.optionLabel ? to.optionLabel : ''\"\n        [metaKeySelection]=\"!!to.metaKeySelection\"\n        [checkbox]=\"!!to.checkbox\"\n        [filter]=\"!!to.filter\"\n        [multiple]=\"!!to.multiple\"\n        [group]=\"!!to.group\"\n        [listStyle]=\"{'max-height':'250px'}\" [style]=\"{'width':'15rem'}\"\n        [formControl]=\"formControl\" [formlyAttributes]=\"field\"></p-listbox>\n      </div>\n  </div>\n  `,\n  encapsulation: ViewEncapsulation.None\n})\nexport class ListBoxComponent extends FieldType implements OnInit {\n\n  listBoxOptions = [];\n  constructor(private httpClient: HttpClient) {\n    super();\n  }\n\n  ngOnInit(): void {\n    if (this.to.remoteurl) {\n      this.httpClient.get<any[]>(this.to.remoteurl).subscribe(data => {\n        this.listBoxOptions = data;\n      });\n    } else if (this.to.options) {\n      this.listBoxOptions = this.to.options as any[];\n    } else {\n      this.listBoxOptions = [];\n    }\n  }\n\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}